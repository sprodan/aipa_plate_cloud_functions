import axios, {isAxiosError} from "axios";
import {compressAndUploadImage} from "./imageUtils";

interface RecraftGenerateOptions {
  englishTitle: string;
  englishDescription: string;
  mealType: "full_meal" | "snack" | "drink";
  tags: string[];
}

/**
 * Generate food image using Recraft API (fixed according to docs)
 */
export async function generateRecraftFoodImage(options: RecraftGenerateOptions): Promise<{
  photoUrl: string;
  blurhash: string;
}> {
  const {englishTitle, englishDescription, mealType, tags} = options;

  console.log(`üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Recraft –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${englishTitle}`);

  try {
    // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    const prompt = createSmartFoodPrompt(englishTitle, englishDescription, mealType, tags);

    console.log(`üìù –ü—Ä–æ–º–ø—Ç: ${prompt.substring(0, 150)}...`);

    // –í—ã–∑—ã–≤–∞–µ–º Recraft API - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const response = await axios.post(
      "https://external.api.recraft.ai/v1/images/generations",
      {
        prompt: prompt,
        style: "realistic_image", // –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        model: "recraftv3", // –ò–°–ü–†–ê–í–õ–ï–ù–û: recraftv3 –≤–º–µ—Å—Ç–æ recraft-v3
        size: "1024x1024", // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        n: 1, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        response_format: "url", // –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
      },
      {
        headers: {
          "Authorization": `Bearer ${process.env.RECRAFT_API_TOKEN}`,
          "Content-Type": "application/json",
        },
        timeout: 120000, // 2 –º–∏–Ω—É—Ç—ã —Ç–∞–π–º–∞—É—Ç
      }
    );

    console.log("üîç –û—Ç–≤–µ—Ç Recraft API:", JSON.stringify(response.data, null, 2));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
    if (!response.data) {
      throw new Error("Recraft API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç");
    }

    // –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, URL –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    let imageUrl: string;

    if (response.data.data && response.data.data[0] && response.data.data[0].url) {
      imageUrl = response.data.data[0].url;
    } else if (typeof response.data === "string" && response.data.startsWith("https://")) {
      // –ò–Ω–æ–≥–¥–∞ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL –Ω–∞–ø—Ä—è–º—É—é
      imageUrl = response.data;
    } else {
      console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:", response.data);
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –æ—Ç–≤–µ—Ç–∞ API");
    }

    console.log(`‚úÖ Recraft –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è ${englishTitle}`);
    console.log(`üîó Raw URL: ${imageUrl}`);

    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    const tempMealId = englishTitle
      .toLowerCase()
      .replace(/[^a-z0-9]/g, "_")
      .replace(/_+/g, "_")
      .replace(/^_|_$/g, "")
      .substring(0, 20) + "_" + Date.now();

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Ç–∏–ª–∏—Ç—É –¥–ª—è —Å–∂–∞—Ç–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å blurhash
    console.log(`üì¶ –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º blurhash –¥–ª—è ${englishTitle}...`);
    const result = await compressAndUploadImage(imageUrl, undefined, tempMealId);

    console.log("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å blurhash");
    console.log(`üîó Final URL: ${result.photoUrl}`);
    console.log(`üé® Blurhash: ${result.blurhash}`);

    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ Recraft –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è ${englishTitle}:`, error);

    if (isAxiosError(error)) {
      console.error(`HTTP Status: ${error.response?.status}`);
      console.error("Response data:", error.response?.data);
      console.error("Request URL:", error.config?.url);
    }

    throw error;
  }
}

/**
 * Create intelligent food photography prompt (optimized for Recraft)
 */
function createSmartFoodPrompt(
  title: string,
  description: string,
  mealType: string,
  tags: string[]
): string {
  // –ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Recraft
  let prompt = `Professional food photography of ${title}. `;

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
  if (description && description.length < 200) {
    prompt += `${description}. `;
  }

  // –í—ã–±–∏—Ä–∞–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏—é
  const compositionStyle = getCompositionStyle(title, mealType, tags);
  prompt += compositionStyle;

  // –°—Ç–∏–ª—å –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö —Ñ–æ—Ç–æ –µ–¥—ã
  prompt += "Professional food styling, warm natural lighting, appetizing presentation. ";
  prompt += "High-end restaurant quality, commercial food photography. ";
  prompt += "Sharp focus, rich colors, inviting atmosphere.";

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø—Ä–æ–º–ø—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤)
  if (prompt.length > 1000) {
    prompt = prompt.substring(0, 997) + "...";
  }

  return prompt;
}

/**
 * Get composition style optimized for Recraft realistic_image style
 */
function getCompositionStyle(title: string, mealType: string, tags: string[]): string {
  const titleLower = title.toLowerCase();

  // –°—É–ø—ã –∏ —Å–∞–ª–∞—Ç—ã - –≤–∏–¥ —Å–≤–µ—Ä—Ö—É
  if (titleLower.includes("soup") || titleLower.includes("salad") || titleLower.includes("bowl")) {
    return "Top-down view, elegant white ceramic bowl on marble surface. ";
  }

  // –ë—É—Ä–≥–µ—Ä—ã –∏ —Å—ç–Ω–¥–≤–∏—á–∏ - –ø–æ–¥ —É–≥–ª–æ–º
  if (titleLower.includes("burger") || titleLower.includes("sandwich") || titleLower.includes("toast")) {
    return "45-degree angle, rustic wooden cutting board, layered presentation. ";
  }

  // –ù–∞–ø–∏—Ç–∫–∏ - –≤–∏–¥ —Å–±–æ–∫—É
  const drinkKeywords = ["drink", "juice", "smoothie", "coffee", "tea"];
  if (drinkKeywords.some((keyword) => titleLower.includes(keyword)) || mealType === "drink") {
    return "Side view, clear glass, natural ingredients visible. ";
  }

  // –î–µ—Å–µ—Ä—Ç—ã - —ç–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –ø–æ–¥–∞—á–∞
  const dessertKeywords = ["cake", "pie", "dessert", "ice cream", "pastry"];
  if (dessertKeywords.some((keyword) => titleLower.includes(keyword))) {
    return "Elegant plating, white porcelain plate, refined presentation. ";
  }

  // –ó–¥–æ—Ä–æ–≤—ã–µ –±–ª—é–¥–∞ - –º–∏–Ω–∏–º–∞–ª–∏–∑–º
  const healthyTags = ["healthy", "organic", "fresh", "natural", "vegan", "vegetarian"];
  if (tags.some((tag) => healthyTags.includes(tag.toLowerCase()))) {
    return "Clean minimal composition, marble surface, fresh herbs accent. ";
  }

  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–æ–¥–∞—á–∞
  return "Classic food photography angle, clean white plate, professional styling. ";
}

/**
 * Mark meal as failed image generation (for retry later)
 */
export async function markMealImageFailed(mealId: string, error: string): Promise<void> {
  // –ò–°–ü–†–ê–í–õ–Ø–ï–ú: –¥–æ–±–∞–≤–ª—è–µ–º .js —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è TypeScript ES modules
  const {db} = await import("../firebase.js");

  try {
    await db.collection("generated_meals").doc(mealId).update({
      image_generation_failed: true,
      image_generation_error: error,
      image_generation_failed_at: new Date(),
      updated_time: new Date(),
    });

    console.log(`üè∑Ô∏è –ë–ª—é–¥–æ ${mealId} –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);
  } catch (updateError) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ –±–ª—é–¥–∞ ${mealId}:`, updateError);
  }
}
